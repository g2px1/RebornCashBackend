package com.client.eurekaclient.web3.contracts.tokens;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class Game_sol_Game extends Contract {
    public static final String BINARY = "60c0604052600460808190526347616d6560e01b60a0908152620000279160099190620002d4565b506040805180820190915260048082526347414d4560e01b60209092019182526200005591600a91620002d4565b50600b805460ff191660121790556a52b7d2dcc80cd2e4000000600c8190556000190619600d556003600f819055601055600160118190556012819055601380546001600160a01b031990811673fdea4190322ab8aeba4feff846b7abcac144782b1790915560148290556015919091556016805460ff60a01b199083167397297b8d7669a2e7ba09e9ed041d3f5f57acd26e1716600160a01b17905560056017556018805490911673e1fd8f1d50dc6ea421cd045d5f98e4adcafc18c31790556a52b7d2dcc80cd2e40000006019553480156200013257600080fd5b5060006200013f620002c1565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600d54600360006200019a620002c1565b6001600160a01b039081168252602080830193909352604091820160009081209490945560165481168452600390925280832083905560135490911682528120819055600190600690620001ed620002c5565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055308152600690935281832080548516600190811790915560135482168452828420805486169091179055601654811683528183208054851690556018541682529020805490911690556200026e620002c1565b6001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600c546040518082815260200191505060405180910390a362000370565b3390565b6000546001600160a01b031690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031757805160ff191683800117855562000347565b8280016001018555821562000347579182015b82811115620003475782518255916020019190600101906200032a565b506200035592915062000359565b5090565b5b808211156200035557600081556001016200035a565b612aa980620003806000396000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c806370a0823111610151578063a69df4b5116100c3578063d543dbeb11610087578063d543dbeb14610730578063dd4670641461074d578063dd62ed3e1461076a578063e600393b14610798578063ea2f0b37146107a0578063f2fde38b146107c657610269565b8063a69df4b514610697578063a9059cbb1461069f578063b6c52324146106cb578063bfcba093146106d3578063d4780e36146106db57610269565b806388f820201161011557806388f82020146106105780638da5cb5b146106365780638ee88c531461063e57806394e107841461065b57806395d89b4114610663578063a457c2d71461066b57610269565b806370a0823114610599578063715018a6146105bf57806378aee566146105c75780637d1db4a5146105eb5780638061021b146105f357610269565b80633685d419116101ea5780634549b039116101ae5780634549b039146104c557806346f31622146104ea57806352390c02146104f25780635342acb41461051857806365c63d721461053e5780636bc87c3a1461059157610269565b80633685d41914610428578063395093511461044e5780633b124fe71461047a5780633bd5d17314610482578063437823ec1461049f57610269565b806313114a9d1161023157806313114a9d146103a757806318160ddd146103af57806323b872dd146103b75780632d838119146103ed578063313ce5671461040a57610269565b8063061c82d01461026e57806306fdde031461028d578063095ea7b31461030a57806309771b641461034a5780631190216014610364575b600080fd5b61028b6004803603602081101561028457600080fd5b50356107ec565b005b610295610849565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102cf5781810151838201526020016102b7565b50505050905090810190601f1680156102fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103366004803603604081101561032057600080fd5b506001600160a01b0381351690602001356108df565b604080519115158252519081900360200190f35b6103526108fd565b60408051918252519081900360200190f35b6103816004803603602081101561037a57600080fd5b5035610903565b604080519485526020850193909352838301919091526060830152519081900360800190f35b610352610958565b61035261095e565b610336600480360360608110156103cd57600080fd5b506001600160a01b03813581169160208101359091169060400135610964565b6103526004803603602081101561040357600080fd5b50356109eb565b610412610a4d565b6040805160ff9092168252519081900360200190f35b61028b6004803603602081101561043e57600080fd5b50356001600160a01b0316610a56565b6103366004803603604081101561046457600080fd5b506001600160a01b038135169060200135610d1c565b610352610d6a565b61028b6004803603602081101561049857600080fd5b5035610d70565b61028b600480360360208110156104b557600080fd5b50356001600160a01b0316610e4c565b610352600480360360408110156104db57600080fd5b50803590602001351515610ec8565b610336610f5c565b61028b6004803603602081101561050857600080fd5b50356001600160a01b0316610f6c565b6103366004803603602081101561052e57600080fd5b50356001600160a01b03166111f7565b610573600480360360a081101561055457600080fd5b5080359060208101359060408101359060608101359060800135611215565b60408051938452602084019290925282820152519081900360600190f35b610352611277565b610352600480360360208110156105af57600080fd5b50356001600160a01b031661127d565b61028b6112df565b6105cf61136f565b604080516001600160a01b039092168252519081900360200190f35b61035261137e565b61028b6004803603602081101561060957600080fd5b5035611384565b6103366004803603602081101561062657600080fd5b50356001600160a01b03166113e1565b6105cf6113ff565b61028b6004803603602081101561065457600080fd5b503561140e565b61035261146b565b61029561148e565b6103366004803603604081101561068157600080fd5b506001600160a01b0381351690602001356114ef565b61028b61165d565b610336600480360360408110156106b557600080fd5b506001600160a01b03813516906020013561174b565b61035261175f565b6105cf611765565b6106f8600480360360208110156106f157600080fd5b5035611774565b604080519788526020880196909652868601949094526060860192909252608085015260a084015260c0830152519081900360e00190f35b61028b6004803603602081101561074657600080fd5b50356117cf565b61028b6004803603602081101561076357600080fd5b503561184d565b6103526004803603604081101561078057600080fd5b506001600160a01b03813581169160200135166118eb565b6105cf611916565b61028b600480360360208110156107b657600080fd5b50356001600160a01b0316611925565b61028b600480360360208110156107dc57600080fd5b50356001600160a01b031661199e565b6107f4611a84565b6000546001600160a01b03908116911614610844576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b600f55565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108d55780601f106108aa576101008083540402835291602001916108d5565b820191906000526020600020905b8154815290600101906020018083116108b857829003601f168201915b5050505050905090565b60006108f36108ec611a84565b8484611a88565b5060015b92915050565b60145481565b600080600080600061091486611b74565b9050600061092187611b90565b9050600061092e88611bac565b905060006109488261094285818d89611bc8565b90611bc8565b9993985091965094509092505050565b600e5490565b600c5490565b6000610971848484611c11565b6109e18461097d611a84565b6109dc85604051806060016040528060288152602001612926602891396001600160a01b038a166000908152600560205260408120906109bb611a84565b6001600160a01b031681526020810191909152604001600020549190611e9a565b611a88565b5060019392505050565b6000600d54821115610a2e5760405162461bcd60e51b815260040180806020018281038252602a81526020018061286b602a913960400191505060405180910390fd5b6000610a3861146b565b9050610a448382611f31565b9150505b919050565b600b5460ff1690565b610a5e611a84565b6000546001600160a01b03908116911614610aae576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b6018546001600160a01b0382811691161415610b05576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21037b832b930ba34b7b760791b604482015290519081900360640190fd5b6013546001600160a01b0382811691161415610b5c576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21037b832b930ba34b7b760791b604482015290519081900360640190fd5b6016546001600160a01b0382811691161415610bb3576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21037b832b930ba34b7b760791b604482015290519081900360640190fd5b6001600160a01b03811660009081526007602052604090205460ff16610c20576040805162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c756465640000000000604482015290519081900360640190fd5b60005b600854811015610d1857816001600160a01b031660088281548110610c4457fe5b6000918252602090912001546001600160a01b03161415610d1057600880546000198101908110610c7157fe5b600091825260209091200154600880546001600160a01b039092169183908110610c9757fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600482526040808220829055600790925220805460ff191690556008805480610ce957fe5b600082815260209020810160001990810180546001600160a01b0319169055019055610d18565b600101610c23565b5050565b60006108f3610d29611a84565b846109dc8560056000610d3a611a84565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611f73565b600f5481565b6000610d7a611a84565b6001600160a01b03811660009081526007602052604090205490915060ff1615610dd55760405162461bcd60e51b815260040180806020018281038252602c815260200180612a00602c913960400191505060405180910390fd5b6000610de083611774565b5050506001600160a01b038616600090815260036020526040902054939450610e0e93925084915050611bc8565b6001600160a01b038316600090815260036020526040902055600d54610e349082611bc8565b600d55600e54610e449084611f73565b600e55505050565b610e54611a84565b6000546001600160a01b03908116911614610ea4576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6000600c54831115610f21576040805162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c7900604482015290519081900360640190fd5b81610f41576000610f3184611774565b509496506108f795505050505050565b6000610f4c84611774565b509396506108f795505050505050565b601654600160a01b900460ff1690565b610f74611a84565b6000546001600160a01b03908116911614610fc4576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b6018546001600160a01b038281169116141561101b576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21037b832b930ba34b7b760791b604482015290519081900360640190fd5b6013546001600160a01b0382811691161415611072576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21037b832b930ba34b7b760791b604482015290519081900360640190fd5b6016546001600160a01b03828116911614156110c9576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21037b832b930ba34b7b760791b604482015290519081900360640190fd5b6001600160a01b03811660009081526007602052604090205460ff1615611137576040805162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c756465640000000000604482015290519081900360640190fd5b6001600160a01b03811660009081526003602052604090205415611191576001600160a01b038116600090815260036020526040902054611177906109eb565b6001600160a01b0382166000908152600460205260409020555b6001600160a01b03166000818152600760205260408120805460ff191660019081179091556008805491820181559091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319169091179055565b6001600160a01b031660009081526006602052604090205460ff1690565b60008080806112248986611fcd565b905060006112328987611fcd565b905060006112408888611fcd565b9050600061124e8a89611fcd565b905060006112628361094284818989611bc8565b949d949c50929a509298505050505050505050565b60115481565b6001600160a01b03811660009081526007602052604081205460ff16156112bd57506001600160a01b038116600090815260046020526040902054610a48565b6001600160a01b0382166000908152600360205260409020546108f7906109eb565b6112e7611a84565b6000546001600160a01b03908116911614611337576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b039091169060008051602061296e833981519152908390a3600080546001600160a01b0319169055565b6013546001600160a01b031681565b60195481565b61138c611a84565b6000546001600160a01b039081169116146113dc576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b601455565b6001600160a01b031660009081526007602052604090205460ff1690565b6000546001600160a01b031690565b611416611a84565b6000546001600160a01b03908116911614611466576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b601155565b6000806000611478612026565b90925090506114878282611f31565b9250505090565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108d55780601f106108aa576101008083540402835291602001916108d5565b6018546000906001600160a01b0384811691161415611549576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21037b832b930ba34b7b760791b604482015290519081900360640190fd5b6013546001600160a01b03848116911614156115a0576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21037b832b930ba34b7b760791b604482015290519081900360640190fd5b6016546001600160a01b03848116911614156115f7576040805162461bcd60e51b815260206004820152601160248201527024b73b30b634b21037b832b930ba34b7b760791b604482015290519081900360640190fd5b6108f3611602611a84565b846109dc85604051806060016040528060258152602001612a4f602591396005600061162c611a84565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611e9a565b6001546001600160a01b031633146116a65760405162461bcd60e51b8152600401808060200182810382526023815260200180612a2c6023913960400191505060405180910390fd5b60025442116116fc576040805162461bcd60e51b815260206004820152601f60248201527f436f6e7472616374206973206c6f636b656420756e74696c2037206461797300604482015290519081900360640190fd5b600154600080546040516001600160a01b03938416939091169160008051602061296e83398151915291a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b60006108f3611758611a84565b8484611c11565b60025490565b6016546001600160a01b031681565b600080600080600080600080600080600061178e8c610903565b935093509350935060008060006117af8f8787876117aa61146b565b611215565b919f509d509b509599509397509195509350505050919395979092949650565b6117d7611a84565b6000546001600160a01b03908116911614611827576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b611847606461184183600c54611fcd90919063ffffffff16565b90611f31565b60195550565b611855611a84565b6000546001600160a01b039081169116146118a5576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b60008054600180546001600160a01b03199081166001600160a01b03841617909155168155428201600255604051819060008051602061296e833981519152908290a350565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6016546001600160a01b031690565b61192d611a84565b6000546001600160a01b0390811691161461197d576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600660205260409020805460ff19169055565b6119a6611a84565b6000546001600160a01b039081169116146119f6576040805162461bcd60e51b8152602060048201819052602482015260008051602061294e833981519152604482015290519081900360640190fd5b6001600160a01b038116611a3b5760405162461bcd60e51b81526004018080602001828103825260268152602001806128956026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602061296e83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b038316611acd5760405162461bcd60e51b81526004018080602001828103825260248152602001806129dc6024913960400191505060405180910390fd5b6001600160a01b038216611b125760405162461bcd60e51b81526004018080602001828103825260228152602001806128bb6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260056020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60006108f76064611841600f5485611fcd90919063ffffffff16565b60006108f7606461184160115485611fcd90919063ffffffff16565b60006108f7606461184160145485611fcd90919063ffffffff16565b6000611c0a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611e9a565b9392505050565b6001600160a01b038316611c565760405162461bcd60e51b81526004018080602001828103825260258152602001806129b76025913960400191505060405180910390fd5b6001600160a01b038216611c9b5760405162461bcd60e51b81526004018080602001828103825260238152602001806128486023913960400191505060405180910390fd5b60008111611cda5760405162461bcd60e51b815260040180806020018281038252602981526020018061298e6029913960400191505060405180910390fd5b611ce26113ff565b6001600160a01b0316611cf3611a84565b6001600160a01b0316148015611d1657506018546001600160a01b038481169116145b15611d5b576040805162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103a3930b739b332b960811b604482015290519081900360640190fd5b601654600160a01b900460ff16611e5157611d746113ff565b6001600160a01b0316836001600160a01b031614158015611dae5750611d986113ff565b6001600160a01b0316826001600160a01b031614155b15611df457601954811115611df45760405162461bcd60e51b81526004018080602001828103825260288152602001806128dd6028913960400191505060405180910390fd5b6001600160a01b03831660009081526006602052604090205460019060ff1680611e3657506001600160a01b03831660009081526006602052604090205460ff165b15611e3f575060005b611e4b84848484612189565b50611e95565b6016805460ff60a01b19169055611e95611e696113ff565b601854601754600c546001600160a01b0390921691611e8e9160649161184191611fcd565b6000612189565b505050565b60008184841115611f295760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611eee578181015183820152602001611ed6565b50505050905090810190601f168015611f1b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000611c0a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506122fd565b600082820183811015611c0a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082611fdc575060006108f7565b82820282848281611fe957fe5b0414611c0a5760405162461bcd60e51b81526004018080602001828103825260218152602001806129056021913960400191505060405180910390fd5b600d54600c546000918291825b6008548110156121575782600360006008848154811061204f57fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190205411806120b4575081600460006008848154811061208d57fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b156120cb57600d54600c5494509450505050612185565b61210b60036000600884815481106120df57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020548490611bc8565b925061214d600460006008848154811061212157fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020548390611bc8565b9150600101612033565b50600c54600d5461216791611f31565b82101561217f57600d54600c54935093505050612185565b90925090505b9091565b8061219657612196612362565b6001600160a01b03841660009081526007602052604090205460ff1680156121d757506001600160a01b03831660009081526007602052604090205460ff16155b156121ec576121e78484846123ab565b6122ea565b6001600160a01b03841660009081526007602052604090205460ff1615801561222d57506001600160a01b03831660009081526007602052604090205460ff165b1561223d576121e78484846124ef565b6001600160a01b03841660009081526007602052604090205460ff1615801561227f57506001600160a01b03831660009081526007602052604090205460ff16155b1561228f576121e78484846125ae565b6001600160a01b03841660009081526007602052604090205460ff1680156122cf57506001600160a01b03831660009081526007602052604090205460ff165b156122df576121e7848484612608565b6122ea8484846125ae565b806122f7576122f7612691565b50505050565b6000818361234c5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611eee578181015183820152602001611ed6565b50600083858161235857fe5b0495945050505050565b600f541580156123725750601154155b801561237e5750601454155b15612388576123a9565b600f8054601055601180546012556014805460155560009283905590829055555b565b60008060008060008060006123bf88611774565b965096509650965096509650965061240588600460008d6001600160a01b03166001600160a01b0316815260200190815260200160002054611bc890919063ffffffff16565b6001600160a01b038b166000908152600460209081526040808320939093556003905220546124349088611bc8565b6001600160a01b03808c1660009081526003602052604080822093909355908b16815220546124639087611f73565b6001600160a01b038a16600090815260036020526040902055612485826126a5565b61248e81612764565b6124988584612823565b886001600160a01b03168a6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a350505050505050505050565b600080600080600080600061250388611774565b965096509650965096509650965061254987600360008d6001600160a01b03166001600160a01b0316815260200190815260200160002054611bc890919063ffffffff16565b6001600160a01b03808c16600090815260036020908152604080832094909455918c1681526004909152205461257f9085611f73565b6001600160a01b038a166000908152600460209081526040808320939093556003905220546124639087611f73565b60008060008060008060006125c288611774565b965096509650965096509650965061243487600360008d6001600160a01b03166001600160a01b0316815260200190815260200160002054611bc890919063ffffffff16565b600080600080600080600061261c88611774565b965096509650965096509650965061266288600460008d6001600160a01b03166001600160a01b0316815260200190815260200160002054611bc890919063ffffffff16565b6001600160a01b038b166000908152600460209081526040808320939093556003905220546125499088611bc8565b601054600f55601254601155601554601455565b60006126af61146b565b905060006126bd8383611fcd565b6013546001600160a01b03166000908152600360205260409020549091506126e59082611f73565b601380546001600160a01b03908116600090815260036020908152604080832095909555925490911681526007909152205460ff1615611e95576013546001600160a01b03166000908152600460205260409020546127449084611f73565b6013546001600160a01b0316600090815260046020526040902055505050565b600061276e61146b565b9050600061277c8383611fcd565b6016546001600160a01b03166000908152600360205260409020549091506127a49082611f73565b601680546001600160a01b03908116600090815260036020908152604080832095909555925490911681526007909152205460ff1615611e95576016546001600160a01b03166000908152600460205260409020546128039082611f73565b6016546001600160a01b0316600090815260046020526040902055505050565b600d546128309083611bc8565b600d55600e546128409082611f73565b600e55505056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573735472616e7366657220616d6f756e74206578636565647320746865206d61785478416d6f756e742e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f45524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734578636c75646564206164647265737365732063616e6e6f742063616c6c20746869732066756e6374696f6e596f7520646f6e27742068617665207065726d697373696f6e20746f20756e6c6f636b45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209bf793dff8f76ee13c142ee17b257560181ec595231816957a60a913b364dbe264736f6c634300060c0033";

    public static final String FUNC__GETRVALUES = "_getRValues";

    public static final String FUNC__GETRATE = "_getRate";

    public static final String FUNC__GETTVALUES = "_getTValues";

    public static final String FUNC__GETVALUES = "_getValues";

    public static final String FUNC__LIQUIDITYFEE = "_liquidityFee";

    public static final String FUNC__MAXTXAMOUNT = "_maxTxAmount";

    public static final String FUNC__SPECFEE = "_specFee";

    public static final String FUNC__TAXFEE = "_taxFee";

    public static final String FUNC_ADDRESSLIQFEERECEIVER = "addressLiqFeeReceiver";

    public static final String FUNC_ADDRESSSPECFEERECEIVER = "addressSpecFeeReceiver";

    public static final String FUNC_ALLOWANCE = "allowance";

    public static final String FUNC_APPROVE = "approve";

    public static final String FUNC_BALANCEOF = "balanceOf";

    public static final String FUNC_DECIMALS = "decimals";

    public static final String FUNC_DECREASEALLOWANCE = "decreaseAllowance";

    public static final String FUNC_DELIVER = "deliver";

    public static final String FUNC_EXCLUDEFROMFEE = "excludeFromFee";

    public static final String FUNC_EXCLUDEFROMREWARD = "excludeFromReward";

    public static final String FUNC_GEUNLOCKTIME = "geUnlockTime";

    public static final String FUNC_GETSPECFEERECEIVER = "getSpecFeeReceiver";

    public static final String FUNC_INCLUDEINFEE = "includeInFee";

    public static final String FUNC_INCLUDEINREWARD = "includeInReward";

    public static final String FUNC_INCREASEALLOWANCE = "increaseAllowance";

    public static final String FUNC_ISEXCLUDEDFROMFEE = "isExcludedFromFee";

    public static final String FUNC_ISEXCLUDEDFROMREWARD = "isExcludedFromReward";

    public static final String FUNC_ISFIRSTTRANSFER = "isFirstTransfer";

    public static final String FUNC_LOCK = "lock";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_REFLECTIONFROMTOKEN = "reflectionFromToken";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_SETLIQUIDITYFEEPERCENT = "setLiquidityFeePercent";

    public static final String FUNC_SETMAXTXPERCENT = "setMaxTxPercent";

    public static final String FUNC_SETSPECFEEPERCENT = "setSpecFeePercent";

    public static final String FUNC_SETTAXFEEPERCENT = "setTaxFeePercent";

    public static final String FUNC_SYMBOL = "symbol";

    public static final String FUNC_TOKENFROMREFLECTION = "tokenFromReflection";

    public static final String FUNC_TOTALFEES = "totalFees";

    public static final String FUNC_TOTALSUPPLY = "totalSupply";

    public static final String FUNC_TRANSFER = "transfer";

    public static final String FUNC_TRANSFERFROM = "transferFrom";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_UNLOCK = "unlock";

    public static final Event APPROVAL_EVENT = new Event("Approval", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event TRANSFER_EVENT = new Event("Transfer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected Game_sol_Game(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Game_sol_Game(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Game_sol_Game(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Game_sol_Game(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<ApprovalEventResponse> getApprovalEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(APPROVAL_EVENT, transactionReceipt);
        ArrayList<ApprovalEventResponse> responses = new ArrayList<ApprovalEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ApprovalEventResponse typedResponse = new ApprovalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.spender = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApprovalEventResponse>() {
            @Override
            public ApprovalEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(APPROVAL_EVENT, log);
                ApprovalEventResponse typedResponse = new ApprovalEventResponse();
                typedResponse.log = log;
                typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.spender = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPROVAL_EVENT));
        return approvalEventFlowable(filter);
    }

    public List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnershipTransferredEventResponse>() {
            @Override
            public OwnershipTransferredEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
                OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
        return ownershipTransferredEventFlowable(filter);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TransferEventResponse> transferEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TransferEventResponse> transferEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TRANSFER_EVENT));
        return transferEventFlowable(filter);
    }

    public RemoteFunctionCall<Tuple3<BigInteger, BigInteger, BigInteger>> _getRValues(BigInteger tAmount, BigInteger tFee, BigInteger tLiquidity, BigInteger tSpecFee, BigInteger currentRate) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC__GETRVALUES, 
                Arrays.<Type>asList(new Uint256(tAmount),
                new Uint256(tFee),
                new Uint256(tLiquidity),
                new Uint256(tSpecFee),
                new Uint256(currentRate)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> _getRate() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC__GETRATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>> _getTValues(BigInteger tAmount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC__GETTVALUES, 
                Arrays.<Type>asList(new Uint256(tAmount)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple4<BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple7<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>> _getValues(BigInteger tAmount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC__GETVALUES, 
                Arrays.<Type>asList(new Uint256(tAmount)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple7<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple7<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple7<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> _liquidityFee() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC__LIQUIDITYFEE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> _maxTxAmount() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC__MAXTXAMOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> _specFee() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC__SPECFEE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> _taxFee() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC__TAXFEE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> addressLiqFeeReceiver() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ADDRESSLIQFEERECEIVER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> addressSpecFeeReceiver() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ADDRESSSPECFEERECEIVER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> allowance(String owner, String spender) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ALLOWANCE, 
                Arrays.<Type>asList(new Address(160, owner),
                new Address(160, spender)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> approve(String spender, BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPROVE, 
                Arrays.<Type>asList(new Address(160, spender),
                new Uint256(amount)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> balanceOf(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BALANCEOF, 
                Arrays.<Type>asList(new Address(160, account)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> decimals() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DECIMALS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> decreaseAllowance(String spender, BigInteger subtractedValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DECREASEALLOWANCE, 
                Arrays.<Type>asList(new Address(160, spender),
                new Uint256(subtractedValue)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deliver(BigInteger tAmount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELIVER, 
                Arrays.<Type>asList(new Uint256(tAmount)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> excludeFromFee(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXCLUDEFROMFEE, 
                Arrays.<Type>asList(new Address(160, account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> excludeFromReward(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXCLUDEFROMREWARD, 
                Arrays.<Type>asList(new Address(160, account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> geUnlockTime() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GEUNLOCKTIME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getSpecFeeReceiver() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETSPECFEERECEIVER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> includeInFee(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INCLUDEINFEE, 
                Arrays.<Type>asList(new Address(160, account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> includeInReward(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INCLUDEINREWARD, 
                Arrays.<Type>asList(new Address(160, account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> increaseAllowance(String spender, BigInteger addedValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INCREASEALLOWANCE, 
                Arrays.<Type>asList(new Address(160, spender),
                new Uint256(addedValue)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> isExcludedFromFee(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISEXCLUDEDFROMFEE, 
                Arrays.<Type>asList(new Address(160, account)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isExcludedFromReward(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISEXCLUDEDFROMREWARD, 
                Arrays.<Type>asList(new Address(160, account)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isFirstTransfer() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISFIRSTTRANSFER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> lock(BigInteger time) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_LOCK, 
                Arrays.<Type>asList(new Uint256(time)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> name() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_NAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> reflectionFromToken(BigInteger tAmount, Boolean deductTransferFee) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_REFLECTIONFROMTOKEN, 
                Arrays.<Type>asList(new Uint256(tAmount),
                new Bool(deductTransferFee)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setLiquidityFeePercent(BigInteger liquidityFee) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETLIQUIDITYFEEPERCENT, 
                Arrays.<Type>asList(new Uint256(liquidityFee)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setMaxTxPercent(BigInteger maxTxPercent) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETMAXTXPERCENT, 
                Arrays.<Type>asList(new Uint256(maxTxPercent)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setSpecFeePercent(BigInteger specFee) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETSPECFEEPERCENT, 
                Arrays.<Type>asList(new Uint256(specFee)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setTaxFeePercent(BigInteger taxFee) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETTAXFEEPERCENT, 
                Arrays.<Type>asList(new Uint256(taxFee)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> symbol() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SYMBOL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> tokenFromReflection(BigInteger rAmount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOKENFROMREFLECTION, 
                Arrays.<Type>asList(new Uint256(rAmount)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> totalFees() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOTALFEES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> totalSupply() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOTALSUPPLY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> transfer(String recipient, BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFER, 
                Arrays.<Type>asList(new Address(160, recipient),
                new Uint256(amount)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferFrom(String sender, String recipient, BigInteger amount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFERFROM, 
                Arrays.<Type>asList(new Address(160, sender),
                new Address(160, recipient),
                new Uint256(amount)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new Address(160, newOwner)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> unlock() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UNLOCK, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Game_sol_Game load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Game_sol_Game(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Game_sol_Game load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Game_sol_Game(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Game_sol_Game load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Game_sol_Game(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Game_sol_Game load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Game_sol_Game(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Game_sol_Game> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Game_sol_Game.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Game_sol_Game> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Game_sol_Game.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Game_sol_Game> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Game_sol_Game.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Game_sol_Game> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Game_sol_Game.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class ApprovalEventResponse extends BaseEventResponse {
        public String owner;

        public String spender;

        public BigInteger value;
    }

    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }

    public static class TransferEventResponse extends BaseEventResponse {
        public String from;

        public String to;

        public BigInteger value;
    }
}

server.port=8080

spring.thymeleaf.cache=false
spring.security.oauth2.client.registration.messaging-client-oidc.provider=spring
spring.security.oauth2.client.registration.messaging-client-oidc.client-id=messaging-client
spring.security.oauth2.client.registration.messaging-client-oidc.client-secret=secret
spring.security.oauth2.client.registration.messaging-client-oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.messaging-client-oidc.redirect-uri=http://127.0.0.1:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.messaging-client-oidc.scope=openid, profile
spring.security.oauth2.client.registration.messaging-client-oidc.client-name=messaging-client-oidc
spring.security.oauth2.client.registration.messaging-client-authorization-code.provider=spring
spring.security.oauth2.client.registration.messaging-client-authorization-code.client-id=messaging-client
spring.security.oauth2.client.registration.messaging-client-authorization-code.client-secret=secret
spring.security.oauth2.client.registration.messaging-client-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.messaging-client-authorization-code.redirect-uri=http://127.0.0.1:8080/authorized
spring.security.oauth2.client.registration.messaging-client-authorization-code.scope=message.read,message.write
spring.security.oauth2.client.registration.messaging-client-authorization-code.client-name=messaging-client-authorization-code
spring.security.oauth2.client.registration.messaging-client-client-credentials.provider=spring
spring.security.oauth2.client.registration.messaging-client-client-credentials.client-id=messaging-client
spring.security.oauth2.client.registration.messaging-client-client-credentials.client-secret=secret
spring.security.oauth2.client.registration.messaging-client-client-credentials.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.messaging-client-client-credentials.scope=message.read,message.write
spring.security.oauth2.client.registration.messaging-client-client-credentials.client-name=messaging-client-client-credentials
spring.security.oauth2.client.provider.spring.issuer-uri=http://localhost:9000

spring.web.resources.static-locations=classpath:/resources/,classpath:/templates/

messages.base-uri=http://127.0.0.1:8090/messages
